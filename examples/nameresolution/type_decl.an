
type Struct1 = a:I32, b:F64, c:String

type Thingy = Struct1

type Generic a b = first: a, second: b

type Struct2 t =
    a: Thingy
    b: Generic t Thingy

type Union1 a b = | Variant1 | Variant2

type Option a =
   | Just a
   | Nothing

t = Option.Just 1

type MyRef a = &a

// args: --check
// expected stderr:
// examples/nameresolution/type_decl.an:20:16	error: Expected a newline after the top level item but found `a`
// type MyRef a = &a

