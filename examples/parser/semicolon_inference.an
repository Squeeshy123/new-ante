
// Most ante expressions end on the same line, but the
// line is continued automatically if the next line is
// indented. This rule does not occur if the parser
// is expecting a block of code, e.g. after an `=`
// or `then` token.

normal = 1

continued = 1
    - 1

precedence_works = 2 *
    3 + 4
    * 5

main () =
    foo
        bar
        baz
        (if true then
            2
            3
        else 4)

// args: --parse
// expected stdout:
// normal = 1
// 
// continued = - 1 1
// 
// precedence_works = + (* 2 3) (* 4 5)
// 
// main () =
//     foo bar baz

// expected stderr:
// examples/parser/semicolon_inference.an:21:8	error: Expected an unindent but found `(`
//         (if true then
// 
// examples/parser/semicolon_inference.an:24:8	error: Expected a newline after the top level item but found `else`
//         else 4)
// 
// examples/parser/semicolon_inference.an:26:0	error: Expected a top-level item but found `an unindent`
// // args: --parse

