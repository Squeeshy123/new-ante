
trait MyIterable it -> elem with
    mynext : it -> Maybe (elem, it)

// Define iterating on I32s as counting down until 0
impl MyIterable I32 I32 with
    mynext x =
        if x <= 0 then None
        else Some (x, x - 1)

my_iter iterable f =
    match mynext iterable
    | None -> ()
    | Some (elem, rest) ->
        f elem
        my_iter rest f

my_iter 10 print

// args: --delete-binary
// expected stderr:
// examples/codegen/iter.an:3:16	error: Expected an unindent but found `->`
//     mynext : it -> Maybe (elem, it)
// 
// examples/codegen/iter.an:9:8	error: Expected an unindent but found `else`
//         else Some (x, x - 1)
// 
// examples/codegen/iter.an:11:0	error: Expected an unindent but found a newline
// my_iter iterable f =
// 
// examples/codegen/iter.an:20:0	error: Expected `=` to begin the function body but found a newline
// // args: --delete-binary
// 
// examples/codegen/iter.an:8:13	error: `<=` is not defined, was it a typo?
//         if x <= 0 then None
// 
// examples/codegen/iter.an:12:10	error: `mynext` is not defined, was it a typo?
//     match mynext iterable

