
effect Fail with
    fail: Unit -> a

effect Read a with
    read: Unit -> a

read_or_zero f =
    handle Some <| f ()
    | fail () -> None
    | read () -> resume 5u32

foo () =
    if false then fail ()
    read ()

print <| read_or_zero foo

// args: --delete-binary
// expected stderr:
// examples/codegen/effects/handle_multiple_effects.an:3:15	error: Expected an unindent but found `->`
//     fail: Unit -> a
// 
// examples/codegen/effects/handle_multiple_effects.an:6:15	error: Expected an unindent but found `->`
//     read: Unit -> a
// 
// examples/codegen/effects/handle_multiple_effects.an:9:4	error: Expected an unindent but found `handle`
//     handle Some <| f ()
// 
// examples/codegen/effects/handle_multiple_effects.an:17:6	error: Expected `=` to begin the function body but found `<|`
// print <| read_or_zero foo
// 
// examples/codegen/effects/handle_multiple_effects.an:14:18	error: `fail` is not defined, was it a typo?
//     if false then fail ()
// 
// examples/codegen/effects/handle_multiple_effects.an:15:4	error: `read` is not defined, was it a typo?
//     read ()

